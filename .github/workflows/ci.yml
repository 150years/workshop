name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  security_and_lint:
    name: Security and lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  specs:
    name: Specs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Load cached precompiled assets
        id: cache-assets
        uses: actions/cache@v4
        with:
          path: public/assets
          key: ${{ runner.os }}-assets-${{ hashFiles('**/package.json', '**/bun.lockb', 'app/assets/stylesheets/**/*', 'app/assets/images/**/*', 'app/javascript/**/*') }}

      - name: Setup bun
        if: steps.cache-assets.outputs.cache-hit != 'true'
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Precompile assets
        if: steps.cache-assets.outputs.cache-hit != 'true'
        run: |
          SECRET_KEY_BASE_DUMMY=1 bundle exec rails assets:precompile

      - name: Run specs
        run: |
          bundle exec rails zeitwerk:check
          bundle exec rspec

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-${{ github.run_id }}
          path: tmp/capybara
          retention-days: 1
          if-no-files-found: ignore

      - name: Upload coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ github.run_id }}
          path: coverage
          retention-days: 1
          include-hidden-files: true
          if-no-files-found: error

  coverage:
    name: Coverage
    runs-on: ubuntu-latest

    needs: specs

    steps:
    - name: Download coverage report
      uses: actions/download-artifact@v4
      with:
        name: coverage-report-${{ github.run_id }}
        path: coverage

    - name: Check coverage
      uses: vigetlabs/simplecov-check@1.0
      with:
        minimum_coverage: 70
        coverage_path: coverage/.last_run.json